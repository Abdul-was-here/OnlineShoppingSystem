/*
 * Name and Student ID: Abdulmalik Alnasra(15897596) , Akshay Silswal(22163010) 
 * Course Code/Stream: COMP603/W101A
 * Program Design and Construction
 * Project Group 150
 * Project 2
 */
package Administrator;

import Login.Login;
import Database.DBManager;
import java.sql.ResultSetMetaData;
import java.sql.ResultSet;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.derby.shared.common.error.DerbySQLIntegrityConstraintViolationException;

public class AdministratorItems extends javax.swing.JFrame {

    public AdministratorItems() {
        initComponents();
        table_update();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AdministratorTopText = new javax.swing.JLabel();
        AdministratorItemBox = new javax.swing.JPanel();
        ItemDetailsText = new javax.swing.JLabel();
        ItemIDText = new javax.swing.JLabel();
        ItemIDBox = new javax.swing.JTextField();
        ModelIDText = new javax.swing.JLabel();
        ModelIDBox = new javax.swing.JTextField();
        ItemNameText = new javax.swing.JLabel();
        ItemNameBox = new javax.swing.JTextField();
        ModelNameText = new javax.swing.JLabel();
        ModelNameBox = new javax.swing.JTextField();
        BrandIDText = new javax.swing.JLabel();
        BrandIDBox = new javax.swing.JTextField();
        DateOfManufactureText = new javax.swing.JLabel();
        DateOfManufactureBox = new javax.swing.JTextField();
        BrandNameText = new javax.swing.JLabel();
        BrandNameTextBox = new javax.swing.JTextField();
        PriceText = new javax.swing.JLabel();
        PriceBox = new javax.swing.JTextField();
        AddButton = new javax.swing.JButton();
        EditButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();
        PurchaseItemsButton = new javax.swing.JButton();
        LogOutButton = new javax.swing.JButton();
        ScrollPanel = new javax.swing.JScrollPane();
        AdministratorTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        AdministratorTopText.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        AdministratorTopText.setText("Online Shopping (Administrator)");

        AdministratorItemBox.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        ItemDetailsText.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        ItemDetailsText.setText("Item Details:");

        ItemIDText.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ItemIDText.setText("Item ID:");

        ItemIDBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemIDBoxActionPerformed(evt);
            }
        });

        ModelIDText.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ModelIDText.setText("Model ID:");

        ItemNameText.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ItemNameText.setText("Item Name:");

        ItemNameBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemNameBoxActionPerformed(evt);
            }
        });

        ModelNameText.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ModelNameText.setText("Model Name:");

        ModelNameBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModelNameBoxActionPerformed(evt);
            }
        });

        BrandIDText.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        BrandIDText.setText("Brand ID:");

        DateOfManufactureText.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        DateOfManufactureText.setText("Date of Manufacture:");

        BrandNameText.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        BrandNameText.setText("Brand Name:");

        PriceText.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        PriceText.setText("Price:");

        AddButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        AddButton.setText("Add");
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });

        EditButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        EditButton.setText("Edit");
        EditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditButtonActionPerformed(evt);
            }
        });

        DeleteButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        DeleteButton.setText("Delete");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        PurchaseItemsButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        PurchaseItemsButton.setText("Purchase Items");
        PurchaseItemsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PurchaseItemsButtonActionPerformed(evt);
            }
        });

        LogOutButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        LogOutButton.setText("Log Out");
        LogOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogOutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AdministratorItemBoxLayout = new javax.swing.GroupLayout(AdministratorItemBox);
        AdministratorItemBox.setLayout(AdministratorItemBoxLayout);
        AdministratorItemBoxLayout.setHorizontalGroup(
            AdministratorItemBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdministratorItemBoxLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(AdministratorItemBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ItemIDText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ItemNameText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BrandIDText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BrandNameText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(93, 93, 93)
                .addGroup(AdministratorItemBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ItemIDBox, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                    .addComponent(ItemNameBox)
                    .addComponent(BrandIDBox)
                    .addComponent(BrandNameTextBox))
                .addGap(70, 70, 70)
                .addGroup(AdministratorItemBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AdministratorItemBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(AdministratorItemBoxLayout.createSequentialGroup()
                            .addComponent(ModelNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(AdministratorItemBoxLayout.createSequentialGroup()
                            .addComponent(DateOfManufactureText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(45, 45, 45))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AdministratorItemBoxLayout.createSequentialGroup()
                            .addComponent(ModelIDText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                    .addGroup(AdministratorItemBoxLayout.createSequentialGroup()
                        .addComponent(PriceText, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(122, 122, 122)))
                .addGroup(AdministratorItemBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ModelIDBox)
                    .addComponent(DateOfManufactureBox)
                    .addComponent(ModelNameBox)
                    .addComponent(PriceBox, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(AdministratorItemBoxLayout.createSequentialGroup()
                .addGroup(AdministratorItemBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AdministratorItemBoxLayout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(AddButton)
                        .addGap(18, 18, 18)
                        .addComponent(EditButton)
                        .addGap(18, 18, 18)
                        .addComponent(DeleteButton)
                        .addGap(18, 18, 18)
                        .addComponent(PurchaseItemsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(LogOutButton))
                    .addGroup(AdministratorItemBoxLayout.createSequentialGroup()
                        .addGap(321, 321, 321)
                        .addComponent(ItemDetailsText, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(151, Short.MAX_VALUE))
        );
        AdministratorItemBoxLayout.setVerticalGroup(
            AdministratorItemBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AdministratorItemBoxLayout.createSequentialGroup()
                .addComponent(ItemDetailsText)
                .addGap(15, 15, 15)
                .addGroup(AdministratorItemBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AdministratorItemBoxLayout.createSequentialGroup()
                        .addGroup(AdministratorItemBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ItemIDText)
                            .addComponent(ItemIDBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(AdministratorItemBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ItemNameText)
                            .addComponent(ItemNameBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(AdministratorItemBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BrandIDText)
                            .addComponent(BrandIDBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(AdministratorItemBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BrandNameText)
                            .addGroup(AdministratorItemBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(BrandNameTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(PriceText))))
                    .addGroup(AdministratorItemBoxLayout.createSequentialGroup()
                        .addGroup(AdministratorItemBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ModelIDText)
                            .addComponent(ModelIDBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(AdministratorItemBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ModelNameText)
                            .addComponent(ModelNameBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(AdministratorItemBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DateOfManufactureText)
                            .addComponent(DateOfManufactureBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(PriceBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(AdministratorItemBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AdministratorItemBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(AddButton)
                        .addComponent(EditButton)
                        .addComponent(DeleteButton)
                        .addComponent(PurchaseItemsButton))
                    .addComponent(LogOutButton))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        AdministratorTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Item Name", "Brand ID", "Brand Name", "Model ID", "Model Name", "Date of Manufacture", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        AdministratorTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AdministratorTableMouseClicked(evt);
            }
        });
        ScrollPanel.setViewportView(AdministratorTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(ScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 853, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(267, 267, 267)
                        .addComponent(AdministratorTopText))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(AdministratorItemBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(AdministratorTopText, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(AdministratorItemBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    Connection con1;
    PreparedStatement insert;

    private void table_update() {
        int c;

        try {
            con1 = DBManager.getConnection();
            insert = con1.prepareStatement("select * from ITEMS");
            ResultSet rs = insert.executeQuery();
            ResultSetMetaData Rss = rs.getMetaData();
            c = Rss.getColumnCount();

            DefaultTableModel Df = (DefaultTableModel) AdministratorTable.getModel();
            Df.setRowCount(0);

            while (rs.next()) {
                Vector v2 = new Vector();

                for (int a = 1; a <= c; a++) {
                    v2.add(rs.getString("itemid"));
                    v2.add(rs.getString("itemname"));
                    v2.add(rs.getString("brandid"));
                    v2.add(rs.getString("brandname"));
                    v2.add(rs.getString("modelid"));
                    v2.add(rs.getString("modelname"));
                    v2.add(rs.getString("dateofmanufacture"));
                    v2.add(rs.getString("price"));
                }

                Df.addRow(v2);
            }

        } catch (SQLException ex) {
            Logger.getLogger(AdministratorItems.class.getName()).log(Level.SEVERE, null, ex);
        }

    }


    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed
        // TODO add your handling code here:

        String iid = ItemIDBox.getText();
        String iname = ItemNameBox.getText();
        String bid = BrandIDBox.getText();
        String bname = BrandNameTextBox.getText();
        String mid = ModelIDBox.getText();
        String mname = ModelNameBox.getText();
        String mdate = DateOfManufactureBox.getText();
        String pprice = PriceBox.getText();

        try {
            con1 = DBManager.getConnection();
            con1 = DriverManager.getConnection("jdbc:derby:OnlineShopping_db");
            insert = con1.prepareStatement("insert into ITEMS (itemid,itemname,brandid,brandname,modelid,modelname,dateofmanufacture,price)values(?,?,?,?,?,?,?,?)");
            insert.setString(1, iid);
            insert.setString(2, iname);
            insert.setString(3, bid);
            insert.setString(4, bname);
            insert.setString(5, mid);
            insert.setString(6, mname);
            insert.setString(7, mdate);
            insert.setString(8, pprice);
            insert.executeUpdate();

            JOptionPane.showMessageDialog(this, "Record Added");
            table_update();
            ItemIDBox.setText("");
            ItemNameBox.setText("");
            BrandIDBox.setText("");
            BrandNameTextBox.setText("");
            ModelIDBox.setText("");
            ModelNameBox.setText("");
            DateOfManufactureBox.setText("");
            PriceBox.setText("");
            ItemIDBox.requestFocus();

        } catch (DerbySQLIntegrityConstraintViolationException ex) {
            if (ex.getSQLState().equals("23505")) {
                // Unique constraint violation, handle it
                JOptionPane.showMessageDialog(this, "Item ID already exists.");
            } else {
                // Other constraint violation, handle it or log the error
                JOptionPane.showMessageDialog(this, "Error: Unable to insert item.");
                ex.printStackTrace();
            }
        } catch (SQLException ex) {
            // Handle other SQL exceptions
            JOptionPane.showMessageDialog(this, "Error: Unable to insert item.");
            ex.printStackTrace();
        }

    }//GEN-LAST:event_AddButtonActionPerformed

    private void ItemNameBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemNameBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ItemNameBoxActionPerformed

    private void ModelNameBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModelNameBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ModelNameBoxActionPerformed

    private void ItemIDBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemIDBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ItemIDBoxActionPerformed

    private void AdministratorTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AdministratorTableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel Df = (DefaultTableModel) AdministratorTable.getModel();
        int selectedIndex = AdministratorTable.getSelectedRow();

        ItemIDBox.setText(Df.getValueAt(selectedIndex, 0).toString());
        ItemNameBox.setText(Df.getValueAt(selectedIndex, 1).toString());
        BrandIDBox.setText(Df.getValueAt(selectedIndex, 2).toString());
        BrandNameTextBox.setText(Df.getValueAt(selectedIndex, 3).toString());
        ModelIDBox.setText(Df.getValueAt(selectedIndex, 4).toString());
        ModelNameBox.setText(Df.getValueAt(selectedIndex, 5).toString());
        DateOfManufactureBox.setText(Df.getValueAt(selectedIndex, 6).toString());
        PriceBox.setText(Df.getValueAt(selectedIndex, 7).toString());


    }//GEN-LAST:event_AdministratorTableMouseClicked

    private void EditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel Df = (DefaultTableModel) AdministratorTable.getModel();
        int selectedIndex = AdministratorTable.getSelectedRow();

        try {

            String iid = ItemIDBox.getText();
            String iname = ItemNameBox.getText();
            String bid = BrandIDBox.getText();
            String bname = BrandNameTextBox.getText();
            String mid = ModelIDBox.getText();
            String mname = ModelNameBox.getText();
            String mdate = DateOfManufactureBox.getText();
            String pprice = PriceBox.getText();

            con1 = DBManager.getConnection();
            insert = con1.prepareStatement("update ITEMS set itemname=?,brandid=?,brandname=?,modelid=?,modelname=?,dateofmanufacture=?,price=? where itemid=?");
            insert.setString(1, iname);
            insert.setString(2, bid);
            insert.setString(3, bname);
            insert.setString(4, mid);
            insert.setString(5, mname);
            insert.setString(6, mdate);
            insert.setString(7, pprice);
            insert.setString(8, iid);

            insert.executeUpdate();

            JOptionPane.showMessageDialog(this, "Record Updated");
            table_update();
            ItemIDBox.setText("");
            ItemNameBox.setText("");
            BrandIDBox.setText("");
            BrandNameTextBox.setText("");
            ModelIDBox.setText("");
            ModelNameBox.setText("");
            DateOfManufactureBox.setText("");
            PriceBox.setText("");
            ItemIDBox.requestFocus();

        } catch (SQLException ex) {
            Logger.getLogger(AdministratorItems.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_EditButtonActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel Df = (DefaultTableModel) AdministratorTable.getModel();
        int selectedIndex = AdministratorTable.getSelectedRow();

        try {

         
            String iid = ItemIDBox.getText();
            int dialogResult = JOptionPane.showConfirmDialog(null, "Do you want to delete the Record", "Warning", JOptionPane.YES_NO_OPTION);

            if (dialogResult == JOptionPane.YES_OPTION) {
                con1 = DBManager.getConnection();
                insert = con1.prepareStatement("delete from ITEMS where itemid=?");
                insert.setString(1, iid);

                insert.executeUpdate();

                JOptionPane.showMessageDialog(this, "Record Deleted");
                table_update();
                ItemIDBox.setText("");
                ItemNameBox.setText("");
                BrandIDBox.setText("");
                BrandNameTextBox.setText("");
                ModelIDBox.setText("");
                ModelNameBox.setText("");
                DateOfManufactureBox.setText("");
                PriceBox.setText("");
                ItemIDBox.requestFocus();

            }

        } catch (SQLException ex) {
            Logger.getLogger(AdministratorItems.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void PurchaseItemsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PurchaseItemsButtonActionPerformed
        // TODO add your handling code here:
        ShoppingMain_Administrator m = new ShoppingMain_Administrator();
        this.hide();
        m.setVisible(true);


    }//GEN-LAST:event_PurchaseItemsButtonActionPerformed

    private void LogOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogOutButtonActionPerformed
        // TODO add your handling code here:
        Login l = new Login();
        this.hide();
        l.setVisible(true);


    }//GEN-LAST:event_LogOutButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdministratorItems.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdministratorItems.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdministratorItems.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdministratorItems.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdministratorItems().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton AddButton;
    private javax.swing.JPanel AdministratorItemBox;
    public javax.swing.JTable AdministratorTable;
    private javax.swing.JLabel AdministratorTopText;
    public javax.swing.JTextField BrandIDBox;
    private javax.swing.JLabel BrandIDText;
    private javax.swing.JLabel BrandNameText;
    public javax.swing.JTextField BrandNameTextBox;
    public javax.swing.JTextField DateOfManufactureBox;
    private javax.swing.JLabel DateOfManufactureText;
    public javax.swing.JButton DeleteButton;
    public javax.swing.JButton EditButton;
    private javax.swing.JLabel ItemDetailsText;
    public javax.swing.JTextField ItemIDBox;
    private javax.swing.JLabel ItemIDText;
    public javax.swing.JTextField ItemNameBox;
    private javax.swing.JLabel ItemNameText;
    public javax.swing.JButton LogOutButton;
    public javax.swing.JTextField ModelIDBox;
    private javax.swing.JLabel ModelIDText;
    public javax.swing.JTextField ModelNameBox;
    private javax.swing.JLabel ModelNameText;
    public javax.swing.JTextField PriceBox;
    private javax.swing.JLabel PriceText;
    public javax.swing.JButton PurchaseItemsButton;
    private javax.swing.JScrollPane ScrollPanel;
    // End of variables declaration//GEN-END:variables
}
