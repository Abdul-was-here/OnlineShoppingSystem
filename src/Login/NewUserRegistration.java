/*
 * Name and Student ID: Abdulmalik Alnasra(15897596) , Akshay Silswal(22163010) 
 * Course Code/Stream: COMP603/W101A
 * Program Design and Construction
 * Project Group 150
 * Project 2
 */
package Login;

import Database.DBManager;
import Database.UsersSQLTable;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.sql.SQLException;
import java.util.Arrays;

public class NewUserRegistration extends javax.swing.JFrame {

    /**
     * Creates new form NewUser
     */
    public NewUserRegistration() {
        initComponents();
    }

    Connection con;
    PreparedStatement pst;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        OnlineShoppingTopText = new javax.swing.JLabel();
        FormBox = new javax.swing.JPanel();
        NewUserRegistrationText = new javax.swing.JLabel();
        NameText = new javax.swing.JLabel();
        NameBox = new javax.swing.JTextField();
        DOBText = new javax.swing.JLabel();
        DOBBox = new javax.swing.JTextField();
        GenderText = new javax.swing.JLabel();
        GenderBox = new javax.swing.JTextField();
        EmailIDText = new javax.swing.JLabel();
        EmailIDBox = new javax.swing.JTextField();
        ContactText = new javax.swing.JLabel();
        ContactBox = new javax.swing.JTextField();
        AddressText = new javax.swing.JLabel();
        StreetText = new javax.swing.JLabel();
        StreetBox = new javax.swing.JTextField();
        CityText = new javax.swing.JLabel();
        CityBox = new javax.swing.JTextField();
        StateText = new javax.swing.JLabel();
        StateBox = new javax.swing.JTextField();
        PincodeText = new javax.swing.JLabel();
        PincodeBox = new javax.swing.JTextField();
        UserNameText = new javax.swing.JLabel();
        UserNameBox = new javax.swing.JTextField();
        UserTypeText = new javax.swing.JLabel();
        UserTypeDropDownButton = new javax.swing.JComboBox<>();
        PasswordText = new javax.swing.JLabel();
        PasswordBox = new javax.swing.JPasswordField();
        ConfirmPasswordText = new javax.swing.JLabel();
        ConfirmPasswordBox = new javax.swing.JPasswordField();
        RegisterButton = new javax.swing.JButton();
        GoBackButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        OnlineShoppingTopText.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        OnlineShoppingTopText.setText("Online Shopping");

        FormBox.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        NewUserRegistrationText.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        NewUserRegistrationText.setText("New User Registration");

        NameText.setText("Name:");

        DOBText.setText("DOB:");

        GenderText.setText("Gender:");

        EmailIDText.setText("Email ID:");

        ContactText.setText("Contact:");

        AddressText.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        AddressText.setText("Address:");

        StreetText.setText("Street:");

        CityText.setText("City:");

        StateText.setText("State:");

        PincodeText.setText("Pincode:");

        UserNameText.setText("User Name:");

        UserTypeText.setText("User Type:");

        UserTypeDropDownButton.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "General", "Administrator" }));
        UserTypeDropDownButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserTypeDropDownButtonActionPerformed(evt);
            }
        });

        PasswordText.setText("Password:");

        ConfirmPasswordText.setText("Confirm Password:");

        RegisterButton.setText("Register");
        RegisterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterButtonActionPerformed(evt);
            }
        });

        GoBackButton.setText("Login");
        GoBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GoBackButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Already Have an Account?");

        javax.swing.GroupLayout FormBoxLayout = new javax.swing.GroupLayout(FormBox);
        FormBox.setLayout(FormBoxLayout);
        FormBoxLayout.setHorizontalGroup(
            FormBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FormBoxLayout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(NewUserRegistrationText)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(FormBoxLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(FormBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AddressText, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(FormBoxLayout.createSequentialGroup()
                        .addGroup(FormBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(UserNameText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(FormBoxLayout.createSequentialGroup()
                                .addGroup(FormBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(NameText, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(DOBText, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(GenderText, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(FormBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(ContactText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(EmailIDText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE))
                                    .addComponent(UserTypeText, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(PincodeText, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(StateText, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CityText, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(StreetText, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(5, 5, 5)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(FormBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(PincodeBox, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                            .addComponent(StateBox)
                            .addComponent(CityBox)
                            .addComponent(StreetBox)
                            .addComponent(ContactBox)
                            .addComponent(EmailIDBox)
                            .addComponent(GenderBox)
                            .addComponent(DOBBox)
                            .addComponent(NameBox)))
                    .addGroup(FormBoxLayout.createSequentialGroup()
                        .addGroup(FormBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ConfirmPasswordText)
                            .addComponent(PasswordText, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(FormBoxLayout.createSequentialGroup()
                                .addComponent(RegisterButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(28, 28, 28)))
                        .addGroup(FormBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FormBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(PasswordBox)
                                .addComponent(ConfirmPasswordBox)
                                .addGroup(FormBoxLayout.createSequentialGroup()
                                    .addGroup(FormBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(UserTypeDropDownButton, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(UserNameBox, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(0, 0, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FormBoxLayout.createSequentialGroup()
                                .addComponent(GoBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(9, 9, 9)))))
                .addGap(46, 46, 46))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FormBoxLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(29, 29, 29))
        );
        FormBoxLayout.setVerticalGroup(
            FormBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FormBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(NewUserRegistrationText, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(FormBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NameText, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NameBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(FormBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DOBText, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DOBBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(FormBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GenderText)
                    .addComponent(GenderBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(FormBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EmailIDText)
                    .addComponent(EmailIDBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(FormBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ContactText)
                    .addComponent(ContactBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AddressText, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(FormBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(StreetBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StreetText, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(FormBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CityText)
                    .addComponent(CityBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(FormBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StateBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StateText))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(FormBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PincodeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PincodeText))
                .addGap(22, 22, 22)
                .addGroup(FormBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UserNameText)
                    .addComponent(UserNameBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(FormBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UserTypeText)
                    .addComponent(UserTypeDropDownButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(FormBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PasswordText)
                    .addComponent(PasswordBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(FormBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ConfirmPasswordText)
                    .addComponent(ConfirmPasswordBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addGap(2, 2, 2)
                .addGroup(FormBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GoBackButton)
                    .addComponent(RegisterButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addComponent(FormBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(216, 216, 216)
                        .addComponent(OnlineShoppingTopText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(172, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(OnlineShoppingTopText, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FormBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void GoBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GoBackButtonActionPerformed
        Login l = new Login();
        this.hide();
        l.setVisible(true);
    }//GEN-LAST:event_GoBackButtonActionPerformed

    private void RegisterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterButtonActionPerformed
        // TODO add your handling code here:

        //To check if user entered the correct information
        if (UserNameBox.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Please give a valid username");
        } else if (PasswordBox.getPassword().length == 0) {
            JOptionPane.showMessageDialog(this, "Please give a valid password");
        } else if (!Arrays.equals(PasswordBox.getPassword(), ConfirmPasswordBox.getPassword())) {
            JOptionPane.showMessageDialog(this, "Passwords do not match");
        } else if (!NameBox.getText().matches("[a-zA-Z ]+")) {
            JOptionPane.showMessageDialog(this, "Name can only contain alphabets and spaces");
        } else if (!DOBBox.getText().matches("\\d{2}/\\d{2}/\\d{4}")) {
            JOptionPane.showMessageDialog(this, "Date of birth should be in the format dd/mm/yyyy");
        } else if (!GenderBox.getText().equalsIgnoreCase("male") && !GenderBox.getText().equalsIgnoreCase("female") && !GenderBox.getText().equalsIgnoreCase("others")) {
            JOptionPane.showMessageDialog(this, "Gender can only be Male, Female or Others");
        } else if (!EmailIDBox.getText().contains("@")) {
            JOptionPane.showMessageDialog(this, "Invalid email address");
        } else if (!ContactBox.getText().matches("\\d+")) {
            JOptionPane.showMessageDialog(this, "Contact can only contain digits");
        } else if (!StreetBox.getText().matches("[a-zA-Z0-9 ]+")) {
            JOptionPane.showMessageDialog(this, "Street can only contain alphabets, numbers, and spaces");
        } else if (!CityBox.getText().matches("[a-zA-Z ]+")) {
            JOptionPane.showMessageDialog(this, "City can only contain alphabets and spaces");
        } else if (!StateBox.getText().matches("[a-zA-Z ]+")) {
            JOptionPane.showMessageDialog(this, "State can only contain alphabets and spaces");
        } else if (!PincodeBox.getText().matches("\\d+")) {
            JOptionPane.showMessageDialog(this, "Pincode can only contain digits");
        } else if (!UserNameBox.getText().matches("[a-zA-Z0-9]+")) {
            JOptionPane.showMessageDialog(this, "Username can only contain alphabets and numbers");
        } else if (!new String(PasswordBox.getPassword()).matches("[a-zA-Z0-9@#$%^&+=]+")) {
            JOptionPane.showMessageDialog(this, "Password can only contain alphabets, numbers, and special characters (@#$%^&+=)");
        } else {
            try {

                String cname = NameBox.getText();
                String cdob = DOBBox.getText();
                String cgender = GenderBox.getText();
                String cemail = EmailIDBox.getText();
                String ccontact = ContactBox.getText();
                String cstreet = StreetBox.getText();
                String ccity = CityBox.getText();
                String cstate = StateBox.getText();
                String cpincode = PincodeBox.getText();
                String uname = UserNameBox.getText();
                String utype = UserTypeDropDownButton.getSelectedItem().toString();
                String pwd = ConfirmPasswordBox.getText();

                con = DBManager.getConnection();
                
                

                UsersSQLTable userssqltable = new UsersSQLTable();

                // Create the USERS table if it doesn't exist
                userssqltable.createUsersTableIfNotExists(con);
                

                // Insert new user
                pst = con.prepareStatement("insert into users (name,dob,gender,email,contact,street,city,state,pincode,username,usertype,password)values(?,?,?,?,?,?,?,?,?,?,?,?)");
                pst.setString(1, cname);
                pst.setString(2, cdob);
                pst.setString(3, cgender);
                pst.setString(4, cemail);
                pst.setString(5, ccontact);
                pst.setString(6, cstreet);
                pst.setString(7, ccity);
                pst.setString(8, cstate);
                pst.setString(9, cpincode);
                pst.setString(10, uname);
                pst.setString(11, utype);
                pst.setString(12, pwd);
                pst.executeUpdate();

                JOptionPane.showMessageDialog(null,"User Registered");

                NameBox.setText("");
                DOBBox.setText("");
                GenderBox.setText("");
                EmailIDBox.setText("");
                ContactBox.setText("");
                StreetBox.setText("");
                CityBox.setText("");
                StateBox.setText("");
                PincodeBox.setText("");
                UserNameBox.setText("");
                UserTypeDropDownButton.setSelectedIndex(-1);
                PasswordBox.setText("");
                ConfirmPasswordBox.setText("");
                NameText.requestFocus();

            } catch (SQLException ex) {
                Logger.getLogger(NewUserRegistration.class.getName()).log(Level.SEVERE, null, ex);
                Logger.getLogger(NewUserRegistration.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "An error occurred while checking the username existence. Please try again later.");
            }
            
        }
    }//GEN-LAST:event_RegisterButtonActionPerformed

    private void UserTypeDropDownButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserTypeDropDownButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UserTypeDropDownButtonActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewUserRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewUserRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewUserRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewUserRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewUserRegistration().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AddressText;
    private javax.swing.JTextField CityBox;
    private javax.swing.JLabel CityText;
    private javax.swing.JPasswordField ConfirmPasswordBox;
    private javax.swing.JLabel ConfirmPasswordText;
    private javax.swing.JTextField ContactBox;
    private javax.swing.JLabel ContactText;
    private javax.swing.JTextField DOBBox;
    private javax.swing.JLabel DOBText;
    private javax.swing.JTextField EmailIDBox;
    private javax.swing.JLabel EmailIDText;
    private javax.swing.JPanel FormBox;
    private javax.swing.JTextField GenderBox;
    private javax.swing.JLabel GenderText;
    private javax.swing.JButton GoBackButton;
    private javax.swing.JTextField NameBox;
    private javax.swing.JLabel NameText;
    private javax.swing.JLabel NewUserRegistrationText;
    private javax.swing.JLabel OnlineShoppingTopText;
    private javax.swing.JPasswordField PasswordBox;
    private javax.swing.JLabel PasswordText;
    private javax.swing.JTextField PincodeBox;
    private javax.swing.JLabel PincodeText;
    private javax.swing.JButton RegisterButton;
    private javax.swing.JTextField StateBox;
    private javax.swing.JLabel StateText;
    private javax.swing.JTextField StreetBox;
    private javax.swing.JLabel StreetText;
    private javax.swing.JTextField UserNameBox;
    private javax.swing.JLabel UserNameText;
    private javax.swing.JComboBox<String> UserTypeDropDownButton;
    private javax.swing.JLabel UserTypeText;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
